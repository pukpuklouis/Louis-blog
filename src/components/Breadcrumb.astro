---
import { getCollection } from 'astro:content';
import { NAV_LINKS } from '../consts.ts';

const currentPath = Astro.url.pathname;
const segments = currentPath.split('/').filter(Boolean);

const posts = await getCollection('blog');
const currentPost = posts.find((post: any) => `/blog/${post.slug}/` === currentPath);

const breadcrumbs = [
  { label: NAV_LINKS[0].title, href: NAV_LINKS[0].url },
  ...segments.map((segment, index) => {
    const href = `/${segments.slice(0, index + 1).join('/')}`;
    let label = segment.charAt(0).toUpperCase() + segment.slice(1);
    
    if (segment === 'blog') {
      label = NAV_LINKS[1].title;
    } else if (segment === 'about') {
      label = NAV_LINKS[2].title;
    } else if (currentPost && index === segments.length - 1) {
      label = currentPost.data.title;
    }
    
    return { label, href };
  }),
];
---

<nav aria-label="Breadcrumb" class="py-2 px-4 mb-4">
  <div class="flex flex-wrap">
    {breadcrumbs.map((crumb, index) => (
      <div class="text-md md:text-lg inline-flex items-center">
        {index === breadcrumbs.length - 1 ? (
          <span aria-current="page" class="text-[var(--color-theme-text)] opacity-90">{crumb.label}</span>
        ) : (
          <a href={crumb.href} class="text-[var(--color-theme-text)] hover:no-underline">{crumb.label}</a>
        )}
        {index !== breadcrumbs.length - 1 && 
          <span class="mx-2 text-[var(--color-theme-text)] opacity-60">></span>
        }
      </div>
    ))}
  </div>
</nav>
