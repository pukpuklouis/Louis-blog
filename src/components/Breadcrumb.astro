---
import { getCollection } from "astro:content";
import { NAV_LINKS } from "../consts.ts";

const currentPath = Astro.url.pathname;
const segments = currentPath.split("/").filter(Boolean);

const posts = await getCollection("blog");
const currentPost = posts.find(
  (post: any) => `/blog/${post.slug}` === currentPath || `/blog/${post.slug}.html` === currentPath,
);

const breadcrumbs = [
  { label: NAV_LINKS[0].title, href: NAV_LINKS[0].url },
  ...segments.map((segment, index) => {
    // Remove .html extension if present in the segment
    const cleanSegment = segment.endsWith('.html') ? segment.slice(0, -5) : segment;
    
    // Build href with .html extension for non-root paths
    const segmentsToUse = segments.slice(0, index + 1).map((seg, i) => {
      if (i === index && seg.endsWith('.html')) {
        return seg;
      }
      return seg;
    });
    
    const href = `/${segmentsToUse.join("/")}`;
    let label = cleanSegment.charAt(0).toUpperCase() + cleanSegment.slice(1);

    if (cleanSegment === "blog") {
      label = NAV_LINKS[1].title;
    } else if (cleanSegment === "about") {
      label = NAV_LINKS[2].title;
    } else if (currentPost && index === segments.length - 1) {
      label = currentPost.data.title;
    }

    return { label, href };
  }),
];

---

<nav aria-label="Breadcrumb" class="py-2 px-4 mb-4">
  <div class="flex flex-wrap">
    {
      breadcrumbs.map((crumb, index) => (
        <div class="font-medium text-base md:text-lg inline-flex items-center">
          {index === breadcrumbs.length - 1 ? (
            <span
              aria-current="page"
              class="font-light text-[var(--color-theme-text)] opacity-70"
            >
              {crumb.label}
            </span>
          ) : (
            <a
              href={crumb.href}
              class="text-[var(--color-theme-text)] hover:no-underline"
            >
              {crumb.label}
            </a>
          )}
          {index !== breadcrumbs.length - 1 && (
            <span class="mx-2 text-[var(--color-theme-text)] opacity-50">
              >
            </span>
          )}
        </div>
      ))
    }
  </div>
</nav>
